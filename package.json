{
  "name": "git-heatmap",
  "displayName": "Git Heatmap",
  "description": "Visualize local Git activity with a GitHub-style heatmap inside VS Code.",
  "version": "0.0.5",
  "publisher": "InfiniteEcho",
  "repository": {
    "type": "git",
    "url": "https://github.com/DawnLck/GitHeatmap"
  },
  "license": "GPL-3.0",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "logo.png",
  "activationEvents": [
    "onStartupFinished",
    "workspaceContains:**/.git"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gitHeatmap.show",
        "title": "Git Heatmap: Show",
        "category": "Git Heatmap"
      },
      {
        "command": "gitHeatmap.refresh",
        "title": "Git Heatmap: Refresh",
        "category": "Git Heatmap"
      },
      {
        "command": "gitHeatmap.selectRepositories",
        "title": "Git Heatmap: Select Repositories",
        "category": "Git Heatmap"
      },
      {
        "command": "gitHeatmap.resetFilters",
        "title": "Git Heatmap: Reset Filter Settings",
        "category": "Git Heatmap"
      },
      {
        "command": "gitHeatmap.exportSVG",
        "title": "Git Heatmap: Export as SVG",
        "category": "Git Heatmap"
      },
      {
        "command": "gitHeatmap.exportPNG",
        "title": "Git Heatmap: Export as PNG",
        "category": "Git Heatmap"
      }
    ],
    "configuration": {
      "title": "Git Heatmap",
      "properties": {
        "gitHeatmap.scanMode": {
          "type": "string",
          "enum": [
            "workspace",
            "customPaths"
          ],
          "default": "workspace",
          "markdownDescription": "Controls how Git Heatmap discovers repositories. `workspace` scans the VS Code workspace. `customPaths` (future) allows specifying additional folders."
        },
        "gitHeatmap.customPaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "markdownDescription": "Optional list of additional folders to scan when `scanMode` is set to `customPaths`."
        },
        "gitHeatmap.metric": {
          "type": "string",
          "enum": [
            "commits",
            "linesChanged",
            "added",
            "deleted"
          ],
          "default": "commits",
          "markdownDescription": "Statistic to visualize in the heatmap. The MVP implements `commits`; other options are placeholders for future releases."
        },
        "gitHeatmap.colorScheme": {
          "type": "string",
          "enum": [
            "github",
            "blue",
            "red",
            "purple",
            "orange",
            "colorblind"
          ],
          "default": "github",
          "markdownDescription": "Color palette for the heatmap. `github` matches GitHub's green scale. `colorblind` uses orange gradient for accessibility."
        },
        "gitHeatmap.includeMerges": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Include merge commits when aggregating data. Defaults to false to mirror GitHub contribution counts."
        },
        "gitHeatmap.dateSource": {
          "type": "string",
          "enum": [
            "committer",
            "author"
          ],
          "default": "committer",
          "markdownDescription": "Which Git date field to use when aggregating contributions."
        },
        "gitHeatmap.filterByAuthor": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Filter commits to show only those authored by the current Git user. Disable to show all commits in the repository."
        },
        "gitHeatmap.statusBar.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Show a Git activity indicator for the last 7 days in the status bar."
        },
        "gitHeatmap.statusBar.updateInterval": {
          "type": "number",
          "default": 300000,
          "markdownDescription": "Status bar update interval (milliseconds), default is 5 minutes."
        },
        "gitHeatmap.statusBar.displayMode": {
          "type": "string",
          "enum": [
            "today",
            "week"
          ],
          "default": "week",
          "markdownDescription": "Status bar display mode: 'today' (today's activity) or 'week' (this week's activity)."
        },
        "gitHeatmap.language": {
          "type": "string",
          "enum": [
            "auto",
            "en",
            "zh-CN"
          ],
          "default": "auto",
          "markdownDescription": "UI language. `auto` follows VS Code language, `en` for English, `zh-CN` for Simplified Chinese. Default is English if auto-detected language is not supported."
        },
        "gitHeatmap.statusBar.showAchievements": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Show encouraging notifications when reaching new activity levels. Adds a gamification element to make coding more fun! ðŸŽ‰"
        }
      }
    },
    "menus": {
      "commandPalette": [
        {
          "command": "gitHeatmap.show",
          "when": "true"
        },
        {
          "command": "gitHeatmap.refresh",
          "when": "gitHeatmap.webviewVisible"
        },
        {
          "command": "gitHeatmap.selectRepositories",
          "when": "true"
        },
        {
          "command": "gitHeatmap.resetFilters",
          "when": "true"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/node": "^20.14.9",
    "@types/vscode": "^1.85.0",
    "typescript": "^5.4.0"
  }
}
